import cv2
import numpy as np

# 검은색 배경 (768x1366 크기, 3채널(BGR), uint8 자료형)
src = np.zeros((768, 1366, 3), dtype=np.uint8)

# 빨간색 수평 직선 그리기 (시작점: (100,100), 끝점: (1200,100), 색: (0,0,255), 두께: 3, 안티앨리어싱 적용)
src = cv2.line(src, (100, 100), (1200, 100), (0, 0, 255), 3, cv2.LINE_AA)

# 초록색 원 그리기 (중심: (300,300), 반지름: 50, 색: (0,255,0), 채움: FILL, 선 타입: LINE_4)
src = cv2.circle(src, (300, 300), 50, (0, 255, 0), cv2.FILLED, cv2.LINE_4)

# 하늘색 사각형 그리기 (좌상단: (500,200), 우하단: (1000,400), 색: (255,255,0), 선 타입: LINE_8, 기본 두께 1)
src = cv2.rectangle(src, (500, 200), (1000, 400), (255, 255, 0), thickness=1, lineType=cv2.LINE_8)

# 노란색 타원 호 그리기 (중심: (1200,300), 크기: (100,50), 회전각: 0, 시작 각도: 90, 끝 각도: 180, 색: (255,255,0), 두께: 2)
src = cv2.ellipse(src, (1200, 300), (100, 50), 0, 90, 180, (255, 255, 0), 2)

# 첫 번째 다각형 (삼각형) 점 좌표 배열
pts1 = np.array([[100, 500], [300, 500], [200, 600]])
# 두 번째 다각형 (삼각형) 점 좌표 배열
pts2 = np.array([[600, 500], [800, 500], [700, 600]])

# 첫 번째 삼각형 그리기 (색: 노란색, 두께: 2, 닫힌 도형)
src = cv2.polylines(src, [pts1], True, (0, 255, 255), 2)

# 두 번째 삼각형 그리기 (색: 노란색, 안티앨리어싱 적용)
src = cv2.polylines(src, [pts2], True, (255, 0, 255), 1, cv2.LINE_AA)

# 흰색 텍스트 'Ryan' 그리기 (위치: (900,600), 폰트: Hershey Complex, 크기: 2, 두께: 3)
src = cv2.putText(src, 'Ryan', (900, 600), cv2.FONT_HERSHEY_COMPLEX, 2, (255, 255, 255), 3)

# 결과 이미지 창에 표시
cv2.imshow("src", src)
cv2.waitKey()  # 키 입력 대기
cv2.destroyAllWindows()  # 창 닫기
